name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/appruntime

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout Code
        with:
          ref: ${{ github.head_ref }}

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Install Java
#        uses: actions/setup-java@9704b39bf258b59bc04b50fa2dd55e9ed76b47a8 # v4.1.0
#        with:
#          distribution: "temurin"
#          java-version: "17"
#
#      - name: Build and test code
#        run: ./gradlew build -x integrationTest --no-daemon
#        env:
#          GRGIT_USER: ${{ secrets.GRGIT_USER }}
#          GRGIT_PASS: ${{ secrets.GRGIT_PASS }}

      # Only use sematic tagging if on master (live build)
      - name: Tag repository
        id: tag
        if: ${{ github.ref_name == 'master' }}
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          default_bump: minor
          fetch_all_tags: true


      # If for live, use the tag from 'Tag repository' step
      - name: Extract metadata (tags, labels) for Docker - Production
        id: meta_prod
        if: ${{ github.ref_name == 'master' }}

        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.new_version }}

      # Set environment variables for prod
      - name: Set environment variables for Production
        if: ${{ github.ref_name == 'master' }}
        run: |
          echo "TAGS=${{ steps.meta_prod.outputs.tags }}" >> $GITHUB_ENV
          echo "LABELS=${{ steps.meta_prod.outputs.labels }}" >> $GITHUB_ENV
          echo "NEW_VERSION=${{ steps.meta_prod.outputs.version }}" >> $GITHUB_ENV

      # If for dev, use branch name for snapshot
      - name: Extract metadata (tags, labels) for Docker - Development
        id: meta_dev
        if: ${{ github.ref_name != 'master' }}

        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ github.ref_name }}-


      # Set environment variables for later use
      - name: Set environment variables for Development
        if: ${{ github.ref_name != 'master' }}
        run: |
          echo "TAGS=${{ steps.meta_dev.outputs.tags }}" >> $GITHUB_ENV
          echo "LABELS=${{ steps.meta_dev.outputs.labels }}" >> $GITHUB_ENV
          echo "NEW_VERSION=${{ steps.meta_dev.outputs.version }}" >> $GITHUB_ENV


      - name: Build and push Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ env.LABELS }}
          secrets: |
            "GRGIT_USER=${{ secrets.GRGIT_USER }}"
            "GRGIT_PASS=${{ secrets.GRGIT_PASS }}"

      - name: Debug
        run: |
          echo "$TAGS"
          echo "$LABELS"
          echo "$NEW_VERSION"

      - name: Create Release
        id: create_release
        if: ${{ github.ref_name == 'master' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Update image tag in stack_definition.yaml
        uses: mikefarah/yq@v4.43.1
        with:
          cmd: |
            yq -i '.stackDef.resources.applications."bulk-shipment-service".image.tag = "${{ env.NEW_VERSION }}"' stack-definition.yaml

      - name: Echo stack-definition.yaml
        run: |
          cat stack-definition.yaml

      - name: Commit & Push changes
        uses: actions-js/push@v1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: Update stack-definition.yaml image tag to v${{ env.NEW_VERSION }}
          branch: ${{ github.head_ref }}


#    - name: Update image tag in stack_definition.yaml
#      uses: mikefarah/yq@master
#      with:
#        cmd: |
#          IMAGE_VERSION=1.13
#          yq -i '.stackDef.resources.applications."bulk-shipment-service".image.tag = $IMAGE_VERSION' stack-definition.yaml
#
#
#    - name: Verify
#      run: |
#        cat ./stack-definition.yaml
#
#    - name: Commit and push changes
#      run: |
#        git config --global user.email "actions@github.com"
#        git config --global user.name "GitHub Actions"
#        git add stack-definition.yaml
#        git commit -m "Update image version in stack_definition.yaml"
#        git push




#  fetch-pr-labels:
#    needs: fetch-pr-number
#    uses: ./.github/workflows/version-bump.yaml
#    with:
#      pull_request_number: ${{ needs.fetch-pr-number.outputs.pr_number }}
