name: Build

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/build

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-check:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Check which event triggered build
        run: echo "A merged PR or workflow_dispatch event has triggered the build -> can continue"


  build-and-push:
    needs: bump-tag-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout Branch
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump and Tag Version
        if: ${{ github.ref_name == 'main' }}
        id: tag
        uses: jefflinse/pr-semver-bump@v1.6.0
        with:
          mode: bump
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          major-label: major
          minor-label: minor
          patch-label: patch


      # Only use sematic tagging if on main (prod build)
      - name: Tag repository
        id: tag
        if: ${{ github.ref_name == 'main' }}
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: ${{ needs.version-bump.outputs.bump }}
          fetch_all_tags: true

      # If for prod, use the tag from 'Tag repository' step
      - name: Extract metadata (tags, labels) for Docker - Production
        id: meta_prod
        if: ${{ github.ref_name == 'main' }}

        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.version }}

      # Set environment variables for prod
      - name: Set environment variables for Production
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo "TAGS=${{ steps.meta_prod.outputs.tags }}" >> $GITHUB_ENV
          echo "LABELS=${{ steps.meta_prod.outputs.labels }}" >> $GITHUB_ENV
          echo "NEW_VERSION=${{ steps.meta_prod.outputs.version }}" >> $GITHUB_ENV

      # If for dev, use branch name for snapshot
      - name: Extract metadata (tags, labels) for Docker - Development
        id: meta_dev
        if: ${{ github.ref_name != 'main' }}

        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ github.ref_name }}-

      # Set environment variables for dev
      - name: Set environment variables for Development
        if: ${{ github.ref_name != 'main' }}
        run: |
          echo "TAGS=${{ steps.meta_dev.outputs.tags }}" >> $GITHUB_ENV
          echo "LABELS=${{ steps.meta_dev.outputs.labels }}" >> $GITHUB_ENV
          echo "NEW_VERSION=${{ steps.meta_dev.outputs.version }}" >> $GITHUB_ENV

      - name: Build and push Docker image to ghcr.io
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ./nginx
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ env.LABELS }}

      - name: Create GitHub release
        id: create_release
        if: ${{ github.ref_name == 'main' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Update image tag in stack_definition.yaml
        uses: mikefarah/yq@v4.43.1
        with:
          cmd: |
            yq -i '.stackDef.resources.applications."bulk-shipment-service".image.tag = "${{ env.NEW_VERSION }}"' stack-definition.yaml
            cat stack-definition.yaml

      - name: Determine branch to push changes to
        id: branch
        run: |
          if [ "${{ github.event.pull_request.merged }}" == true ]; then
            echo "::set-output name=branch::"${{ github.event.pull_request.base.ref }}""
          else
            echo "::set-output name=branch::${{ github.event.pull_request.head.ref }}"
          fi

      - name: Update stack-definition.yaml
        id: commit
        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 # v5.0.1
        with:
          skip_fetch: false
          branch: ${{ steps.branch.outputs.branch }}
          commit_message: |
            Update image tag to ${{ env.NEW_VERSION }}

      - name: Print container version
        if: ${{ env.NEW_VERSION != 'undefined' }}
        run: |
          echo "New container version: ${{ env.NEW_VERSION }}"
          echo ':package: New container version: `${{ env.NEW_VERSION }}`' >> $GITHUB_STEP_SUMMARY
